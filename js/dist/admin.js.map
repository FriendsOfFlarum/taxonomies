{"version":3,"sources":["webpack://@fof/taxonomies/webpack/bootstrap","webpack://@fof/taxonomies/external \"flarum.core.compat['app']\"","webpack://@fof/taxonomies/external \"flarum.core.compat['Model']\"","webpack://@fof/taxonomies/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@fof/taxonomies/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://@fof/taxonomies/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/taxonomies/external \"flarum.core.compat['extend']\"","webpack://@fof/taxonomies/./src/common/utils/sortTaxonomies.js","webpack://@fof/taxonomies/external \"flarum.core.compat['components/Button']\"","webpack://@fof/taxonomies/./src/common/helpers/taxonomyIcon.js","webpack://@fof/taxonomies/./src/common/helpers/termLabel.js","webpack://@fof/taxonomies/./src/common/helpers/termsLabel.js","webpack://@fof/taxonomies/./src/common/utils/sortTerms.js","webpack://@fof/taxonomies/external \"flarum.core.compat['utils/extract']\"","webpack://@fof/taxonomies/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@fof/taxonomies/./src/common/models/Taxonomy.js","webpack://@fof/taxonomies/./src/common/models/Term.js","webpack://@fof/taxonomies/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@fof/taxonomies/./src/common/utils/termToIdentifier.js","webpack://@fof/taxonomies/./src/common/helpers/labelsFromMultipleTaxonomiesList.js","webpack://@fof/taxonomies/external \"flarum.core.compat['utils/classList']\"","webpack://@fof/taxonomies/external \"flarum.core.compat['utils/extractText']\"","webpack://@fof/taxonomies/external \"flarum.core.compat['utils/ItemList']\"","webpack://@fof/taxonomies/./src/common/helpers/index.js","webpack://@fof/taxonomies/./src/common/models/index.js","webpack://@fof/taxonomies/./src/common/utils/index.js","webpack://@fof/taxonomies/external \"flarum.core.compat['components/Modal']\"","webpack://@fof/taxonomies/external \"flarum.core.compat['Component']\"","webpack://@fof/taxonomies/./src/common/addModels.js","webpack://@fof/taxonomies/external \"flarum.core.compat['utils/computed']\"","webpack://@fof/taxonomies/external \"flarum.core.compat['utils/string']\"","webpack://@fof/taxonomies/external \"flarum.core.compat['components/Select']\"","webpack://@fof/taxonomies/external \"flarum.core.compat['components/AdminLinkButton']\"","webpack://@fof/taxonomies/external \"flarum.core.compat['components/AdminNav']\"","webpack://@fof/taxonomies/external \"flarum.core.compat['components/Page']\"","webpack://@fof/taxonomies/external \"flarum.core.compat['components/PermissionGrid']\"","webpack://@fof/taxonomies/./node_modules/html5sortable/dist/html5sortable.es.js","webpack://@fof/taxonomies/./src/admin/components/AbstractEditModal.js","webpack://@fof/taxonomies/./src/admin/components/EditTermModal.js","webpack://@fof/taxonomies/./src/admin/components/TaxonomyTermsList.js","webpack://@fof/taxonomies/./src/admin/components/EditTaxonomyModal.js","webpack://@fof/taxonomies/./src/admin/components/TaxonomiesPage.js","webpack://@fof/taxonomies/./src/admin/components/index.js","webpack://@fof/taxonomies/./src/admin/index.js","webpack://@fof/taxonomies/./src/admin/addPage.js","webpack://@fof/taxonomies/./src/admin/addPermissions.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_assertThisInitialized","self","ReferenceError","_defineProperty","obj","configurable","writable","_inheritsLoose","subClass","superClass","constructor","__proto__","taxonomies","slice","sort","a","b","order","taxonomyIcon","term","attrs","settings","hasIcon","icon","useColor","className","classList","style","color","backgroundColor","termLabel","link","extract","tagText","app","translator","trans","taxonomy","title","description","href","route","slug","config","tagsLabel","terms","children","showLabel","push","sortTerms","forEach","tag","length","Taxonomy","Model","attribute","transformDate","computed","id","Term","hasOne","_extends","assign","target","arguments","source","apply","this","getIdentifier","attributes","indexOf","sortTaxonomies","map","termsLabel","filter","helpers","labelsFromMultipleTaxonomiesList","models","utils","termToIdentifier","store","addData","element","undefined","h5s","data","_filter","nodes","selector","NodeList","HTMLCollection","Array","Error","from","item","nodeType","matches","stores","Map","Store","_config","_placeholder","_data","set","mergedConfig","entries","setConfig","has","getConfig","placeholder","HTMLElement","setData","getData","deleteData","delete","sortableElement","addEventListener","eventName","callback","removeEventListener","addAttribute","setAttribute","removeAttribute","_offset","parentElement","getClientRects","rect","left","window","pageXOffset","right","top","pageYOffset","bottom","_index","elementList","isInDom","parentNode","insertNode","referenceNode","newElement","position","insertBefore","nextElementSibling","insertAfter","_getElementHeight","getComputedStyle","getPropertyValue","parseInt","int","isNaN","reduce","sum","_getElementWidth","_getHandles","items","querySelector","shadowRoot","getEventTarget","event","composedPath","defaultDragImage","draggedElement","elementOffset","posX","pageX","posY","pageY","_listsConnected","destination","origin","isSortable","acceptFrom","split","sel","defaultConfiguration","connectWith","disableIEFix","copy","placeholderClass","draggingClass","hoverClass","dropTargetContainerClass","debounce","throttleTime","maxItems","itemSerializer","containerSerializer","customDragImage","orientation","dragging","draggingHeight","draggingWidth","originContainer","originIndex","originElementIndex","originItemsBeforeUpdate","previousContainer","destinationItemsBeforeUpdate","enableHoverClass","sortableContainer","enable","hoverClasses_1","fn","threshold","_this","lastEventTimestamp","args","_i","now","Date","_throttle","buttons","_a","_b","remove","add","_removeItemEvents","_removeContainerEvents","_removeSortableData","sortable","_removeItemData","findSortable","find","el","findDragElement","options","itemlist","ele","contains","_enableSortable","opts","handles","handle","document","createElement","dragDrop","parent","sortableElements","method","String","querySelectorAll","test","customItemSerializer","customContainerSerializer","serializedItem","serializedContainer","serializedItems","node","html","outerHTML","index","container","itemCount","_serialize","configKey","console","warn","_reloadSortable","customPlaceholder","listItems","tempContainer","tagName","appendChild","innerHTML","includes","_makePlaceholder","e","stopImmediatePropagation","getAttribute","dragItem","Event","dataTransfer","setDragImage","dragImage","effectAllowed","draggedItem","ditem","cloneNode","display","oldDisplay","_getDragging","dispatchEvent","CustomEvent","detail","elementIndex","originalTarget","itemsBeforeUpdate","outTarget","relatedTarget","fromElement","currentTarget","visiblePlaceholder","values","preventDefault","stopPropagation","originItems","destinationContainer","destinationItems","destinationElementIndex","destinationIndex","func","wait","timeout","debouncedDragOverEnter","forcePlaceholderSize","height","width","thisHeight","thisWidth","placeholderIndex","thisIndex","deadZoneVertical","deadZoneHorizontal","offsetTop","offsetLeft","placeAfter","elementMiddleVertical","offsetHeight","elementMiddleHorizontal","offsetWidth","placeholders","clearTimeout","setTimeout","onDragOverEnter","dropEffect","concat","destroy","_destroySortable","disable","_disableSortable","__testing","AbstractEditModal","translationPrefix","isNew","init","dirty","form","content","Button","component","type","loading","disabled","onclick","ondelete","Modal","EditTermModal","props","oninput","tabindex","confirm","extractText","errorHandler","onerror","then","modal","close","loaded","onsubmit","record","createRecord","url","forum","apiEndpoint","save","onsave","TaxonomyTermsList","request","result","pushPayload","redraw","view","LoadingIndicator","$","strategy","show","splice","Component","EditTaxonomyModal","showFilter","allowCustomValues","customValueValidation","customValueSlugger","minTerms","maxTerms","Select","discussions","users","onchange","checked","alpha_num","alpha_dash","regex","random","transliterator","min","step","show_label","show_filter","allow_custom_values","custom_value_validation","custom_value_slugger","min_terms","max_terms","TaxonomiesPage","tabIndex","findIndex","Page","components","initializers","routes","path","extensionSettings","extend","AdminNav","AdminLinkButton","PermissionGrid","permissionGroups","ItemList","label","permission","allowGuest","toArray","addModels"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 50);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['Model'];","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['extend'];","export default function (taxonomies) {\n    // Special case for when retrieving an empty relationship from the store\n    if (taxonomies === false) {\n        taxonomies = [];\n    }\n\n    return taxonomies.slice(0).sort((a, b) => {\n        const order = a.order() - b.order();\n\n        if (order !== 0) {\n            return order;\n        }\n\n        if (a.name() > b.name()) {\n            return 1;\n        }\n\n        if (a.name() < b.name()) {\n            return -1;\n        }\n\n        return 0;\n    });\n}\n","module.exports = flarum.core.compat['components/Button'];","import classList from 'flarum/utils/classList';\n\n/* global m */\n\nexport default function taxonomyIcon(term, attrs = {}, settings = {}) {\n    const hasIcon = term && term.icon();\n    const {useColor = true} = settings;\n\n    attrs.className = classList([\n        attrs.className,\n        'icon',\n        hasIcon ? term.icon() : 'TaxonomyIcon',\n    ]);\n\n    if (term) {\n        attrs.style = attrs.style || {};\n\n        if (hasIcon) {\n            attrs.style.color = useColor ? term.color() : '';\n        } else {\n            attrs.style.backgroundColor = term.color();\n        }\n    } else {\n        attrs.className += ' untagged';\n    }\n\n    return hasIcon ? m('i', attrs) : m('span', attrs);\n}\n","import app from 'flarum/app';\nimport extract from 'flarum/utils/extract';\nimport taxonomyIcon from './taxonomyIcon';\n\n/* global m */\n\nexport default function termLabel(term, attrs = {}) {\n    attrs.style = attrs.style || {};\n    attrs.className = 'TaxonomyLabel ' + (attrs.className || '');\n\n    const link = extract(attrs, 'link');\n    const tagText = term ? term.name() : app.translator.trans('flarum-tags.lib.deleted_tag_text');\n\n    if (term) {\n        const color = term.color();\n        if (color) {\n            attrs.style.backgroundColor = attrs.style.color = color;\n            attrs.className += ' colored';\n        }\n\n        if (link && term.taxonomy()) {\n            attrs.title = term.description() || '';\n            attrs.href = app.route('index', {[term.taxonomy().slug()]: term.slug()});\n            attrs.config = m.route;\n        }\n    } else {\n        attrs.className += ' untagged';\n    }\n\n    return m((link ? 'a' : 'span'), attrs, m('span.TaxonomyLabel-text', [\n        term && term.icon() && taxonomyIcon(term, {}, {useColor: false}),\n        ' ' + tagText,\n    ]));\n}\n","import extract from 'flarum/utils/extract';\nimport termLabel from './termLabel';\nimport sortTerms from '../utils/sortTerms';\n\n/* global m */\n\nexport default function tagsLabel(terms, attrs = {}) {\n    const children = [];\n    const link = extract(attrs, 'link');\n\n    attrs.className = 'TaxonomiesLabel ' + (attrs.className || '');\n\n    if (terms) {\n        let taxonomy = extract(attrs, 'taxonomy');\n\n        if (!taxonomy) {\n            taxonomy = terms[0].taxonomy();\n        }\n\n        if (taxonomy) {\n            attrs['data-slug'] = taxonomy.slug();\n\n            if (taxonomy.showLabel()) {\n                children.push(termLabel(taxonomy, {\n                    className: 'TaxonomyParentLabel',\n                }));\n            }\n        }\n\n        sortTerms(terms).forEach(tag => {\n            if (tag || terms.length === 1) {\n                children.push(termLabel(tag, {link}));\n            }\n        });\n    } else {\n        children.push(termLabel());\n    }\n\n    return m('span', attrs, children);\n}\n","export default function (terms) {\n    return terms.slice(0).sort((a, b) => {\n        const order = a.order() - b.order();\n\n        if (order !== 0) {\n            return order;\n        }\n\n        if (a.name() > b.name()) {\n            return 1;\n        }\n\n        if (a.name() < b.name()) {\n            return -1;\n        }\n\n        return 0;\n    });\n}\n","module.exports = flarum.core.compat['utils/extract'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","import Model from 'flarum/Model';\nimport computed from 'flarum/utils/computed';\n\nexport default class Taxonomy extends Model {\n    type = Model.attribute('type');\n    name = Model.attribute('name');\n    slug = Model.attribute('slug');\n    description = Model.attribute('description');\n    color = Model.attribute('color');\n    icon = Model.attribute('icon');\n    order = Model.attribute('order');\n    showLabel = Model.attribute('showLabel');\n    showFilter = Model.attribute('showFilter');\n    allowCustomValues = Model.attribute('allowCustomValues');\n    customValueValidation = Model.attribute('customValueValidation');\n    customValueSlugger = Model.attribute('customValueSlugger');\n    minTerms = Model.attribute('minTerms');\n    maxTerms = Model.attribute('maxTerms');\n    createdAt = Model.attribute('createdAt', Model.transformDate);\n    canSearchDiscussions = Model.attribute('canSearchDiscussions');\n    canSearchUsers = Model.attribute('canSearchUsers');\n\n    // Used to store the terms on the DiscussionComposer, never visible or part of the DOM\n    uniqueKey = computed('id', id => 'taxonomy' + id);\n}\n","import Model from 'flarum/Model';\n\nexport default class Term extends Model {\n    name = Model.attribute('name');\n    slug = Model.attribute('slug');\n    description = Model.attribute('description');\n    color = Model.attribute('color');\n    icon = Model.attribute('icon');\n    order = Model.attribute('order');\n    createdAt = Model.attribute('createdAt', Model.transformDate);\n\n    taxonomy = Model.hasOne('taxonomy');\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import Model from 'flarum/Model';\n\n/**\n * Prepares a model for a relationship payload\n * We need to keep the name value for custom terms\n */\nexport default function (term) {\n    if (term.id()) {\n        return Model.getIdentifier(term);\n    }\n\n    return {\n        ...Model.getIdentifier(term),\n        attributes: {\n            name: term.name(),\n        },\n    }\n}\n","import sortTaxonomies from '../utils/sortTaxonomies';\nimport termsLabel from './termsLabel';\n\nexport default function (terms, attrs = {}) {\n    const taxonomies = [];\n\n    terms.forEach(term => {\n        const taxonomy = term.taxonomy();\n\n        if (taxonomies.indexOf(taxonomy) === -1) {\n            taxonomies.push(taxonomy);\n        }\n    });\n\n    return sortTaxonomies(taxonomies).map(taxonomy => {\n        return termsLabel(terms.filter(term => term.taxonomy() === taxonomy), attrs);\n    });\n}\n","module.exports = flarum.core.compat['utils/classList'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['utils/ItemList'];","import labelsFromMultipleTaxonomiesList from './labelsFromMultipleTaxonomiesList';\nimport taxonomyIcon from './taxonomyIcon';\nimport termLabel from './termLabel';\nimport termsLabel from './termsLabel';\n\nexport const helpers = {\n    labelsFromMultipleTaxonomiesList,\n    taxonomyIcon,\n    termLabel,\n    termsLabel,\n};\n","import Taxonomy from './Taxonomy';\nimport Term from './Term';\n\nexport const models = {\n    Taxonomy,\n    Term,\n};\n","import sortTaxonomies from './sortTaxonomies';\nimport sortTerms from './sortTerms';\nimport termToIdentifier from './termToIdentifier';\n\nexport const utils = {\n    sortTaxonomies,\n    sortTerms,\n    termToIdentifier,\n};\n","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['Component'];","import app from 'flarum/app';\nimport Taxonomy from './models/Taxonomy';\nimport Term from './models/Term';\n\nexport default function () {\n    app.store.models['fof-taxonomies'] = Taxonomy;\n    app.store.models['fof-taxonomy-terms'] = Term;\n}\n","module.exports = flarum.core.compat['utils/computed'];","module.exports = flarum.core.compat['utils/string'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['components/AdminLinkButton'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['components/PermissionGrid'];","/*\n * HTML5Sortable package\n * https://github.com/lukasoppermann/html5sortable\n *\n * Maintained by Lukas Oppermann <lukas@vea.re>\n *\n * Released under the MIT license.\n */\n/**\n * Get or set data on element\n * @param {HTMLElement} element\n * @param {string} key\n * @param {any} value\n * @return {*}\n */\nfunction addData(element, key, value) {\n    if (value === undefined) {\n        return element && element.h5s && element.h5s.data && element.h5s.data[key];\n    }\n    else {\n        element.h5s = element.h5s || {};\n        element.h5s.data = element.h5s.data || {};\n        element.h5s.data[key] = value;\n    }\n}\n/**\n * Remove data from element\n * @param {HTMLElement} element\n */\nfunction removeData(element) {\n    if (element.h5s) {\n        delete element.h5s.data;\n    }\n}\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {NodeList|HTMLCollection|Array} nodes\n * @param {String} selector\n * @returns {Array}\n */\nvar _filter = (function (nodes, selector) {\n    if (!(nodes instanceof NodeList || nodes instanceof HTMLCollection || nodes instanceof Array)) {\n        throw new Error('You must provide a nodeList/HTMLCollection/Array of elements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return Array.from(nodes);\n    }\n    return Array.from(nodes).filter(function (item) { return item.nodeType === 1 && item.matches(selector); });\n});\n\n/* eslint-env browser */\nvar stores = new Map();\n/**\n * Stores data & configurations per Sortable\n * @param {Object} config\n */\nvar Store = /** @class */ (function () {\n    function Store() {\n        this._config = new Map(); // eslint-disable-line no-undef\n        this._placeholder = undefined; // eslint-disable-line no-undef\n        this._data = new Map(); // eslint-disable-line no-undef\n    }\n    Object.defineProperty(Store.prototype, \"config\", {\n        /**\n         * get the configuration map of a class instance\n         * @method config\n         * @return {object}\n         */\n        get: function () {\n            // transform Map to object\n            var config = {};\n            this._config.forEach(function (value, key) {\n                config[key] = value;\n            });\n            // return object\n            return config;\n        },\n        /**\n         * set the configuration of a class instance\n         * @method config\n         * @param {object} config object of configurations\n         */\n        set: function (config) {\n            if (typeof config !== 'object') {\n                throw new Error('You must provide a valid configuration object to the config setter.');\n            }\n            // combine config with default\n            var mergedConfig = Object.assign({}, config);\n            // add config to map\n            this._config = new Map(Object.entries(mergedConfig));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * set individual configuration of a class instance\n     * @method setConfig\n     * @param  key valid configuration key\n     * @param  value any value\n     * @return void\n     */\n    Store.prototype.setConfig = function (key, value) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Trying to set invalid configuration item: \" + key);\n        }\n        // set config\n        this._config.set(key, value);\n    };\n    /**\n     * get an individual configuration of a class instance\n     * @method getConfig\n     * @param  key valid configuration key\n     * @return any configuration value\n     */\n    Store.prototype.getConfig = function (key) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Invalid configuration item requested: \" + key);\n        }\n        return this._config.get(key);\n    };\n    Object.defineProperty(Store.prototype, \"placeholder\", {\n        /**\n         * get the placeholder for a class instance\n         * @method placeholder\n         * @return {HTMLElement|null}\n         */\n        get: function () {\n            return this._placeholder;\n        },\n        /**\n         * set the placeholder for a class instance\n         * @method placeholder\n         * @param {HTMLElement} placeholder\n         * @return {void}\n         */\n        set: function (placeholder) {\n            if (!(placeholder instanceof HTMLElement) && placeholder !== null) {\n                throw new Error('A placeholder must be an html element or null.');\n            }\n            this._placeholder = placeholder;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * set an data entry\n     * @method setData\n     * @param {string} key\n     * @param {any} value\n     * @return {void}\n     */\n    Store.prototype.setData = function (key, value) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        this._data.set(key, value);\n    };\n    /**\n     * get an data entry\n     * @method getData\n     * @param {string} key an existing key\n     * @return {any}\n     */\n    Store.prototype.getData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.get(key);\n    };\n    /**\n     * delete an data entry\n     * @method deleteData\n     * @param {string} key an existing key\n     * @return {boolean}\n     */\n    Store.prototype.deleteData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.delete(key);\n    };\n    return Store;\n}());\n/**\n * @param {HTMLElement} sortableElement\n * @returns {Class: Store}\n */\nvar store = (function (sortableElement) {\n    // if sortableElement is wrong type\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('Please provide a sortable to the store function.');\n    }\n    // create new instance if not avilable\n    if (!stores.has(sortableElement)) {\n        stores.set(sortableElement, new Store());\n    }\n    // return instance\n    return stores.get(sortableElement);\n});\n\n/**\n * @param {Array|HTMLElement} element\n * @param {Function} callback\n * @param {string} event\n */\nfunction addEventListener(element, eventName, callback) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addEventListener(element[i], eventName, callback);\n        }\n        return;\n    }\n    element.addEventListener(eventName, callback);\n    store(element).setData(\"event\" + eventName, callback);\n}\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} eventName\n */\nfunction removeEventListener(element, eventName) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeEventListener(element[i], eventName);\n        }\n        return;\n    }\n    element.removeEventListener(eventName, store(element).getData(\"event\" + eventName));\n    store(element).deleteData(\"event\" + eventName);\n}\n\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction addAttribute(element, attribute, value) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addAttribute(element[i], attribute, value);\n        }\n        return;\n    }\n    element.setAttribute(attribute, value);\n}\n/**\n * @param {Array|HTMLElement} element\n * @param {string} attribute\n */\nfunction removeAttribute(element, attribute) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeAttribute(element[i], attribute);\n        }\n        return;\n    }\n    element.removeAttribute(attribute);\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {Object}\n */\nvar _offset = (function (element) {\n    if (!element.parentElement || element.getClientRects().length === 0) {\n        throw new Error('target element must be part of the dom');\n    }\n    var rect = element.getClientRects()[0];\n    return {\n        left: rect.left + window.pageXOffset,\n        right: rect.right + window.pageXOffset,\n        top: rect.top + window.pageYOffset,\n        bottom: rect.bottom + window.pageYOffset\n    };\n});\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {Function} func to debounce\n * @param {number} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nvar _debounce = (function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timeout;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n            func.apply(void 0, args);\n        }, wait);\n    };\n});\n\n/* eslint-env browser */\n/**\n * Get position of the element relatively to its sibling elements\n * @param {HTMLElement} element\n * @returns {number}\n */\nvar _index = (function (element, elementList) {\n    if (!(element instanceof HTMLElement) || !(elementList instanceof NodeList || elementList instanceof HTMLCollection || elementList instanceof Array)) {\n        throw new Error('You must provide an element and a list of elements.');\n    }\n    return Array.from(elementList).indexOf(element);\n});\n\n/* eslint-env browser */\n/**\n * Test whether element is in DOM\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nvar isInDom = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('Element is not a node element.');\n    }\n    return element.parentNode !== null;\n});\n\n/* eslint-env browser */\n/**\n * Insert node before or after target\n * @param {HTMLElement} referenceNode - reference element\n * @param {HTMLElement} newElement - element to be inserted\n * @param {String} position - insert before or after reference element\n */\nvar insertNode = function (referenceNode, newElement, position) {\n    if (!(referenceNode instanceof HTMLElement) || !(referenceNode.parentElement instanceof HTMLElement)) {\n        throw new Error('target and element must be a node');\n    }\n    referenceNode.parentElement.insertBefore(newElement, (position === 'before' ? referenceNode : referenceNode.nextElementSibling));\n};\n/**\n * Insert before target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertBefore = function (target, element) { return insertNode(target, element, 'before'); };\n/**\n * Insert after target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertAfter = function (target, element) { return insertNode(target, element, 'after'); };\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {HTMLElement} sortableContainer\n * @param {Function} customSerializer\n * @returns {Array}\n */\nvar _serialize = (function (sortableContainer, customItemSerializer, customContainerSerializer) {\n    if (customItemSerializer === void 0) { customItemSerializer = function (serializedItem, sortableContainer) { return serializedItem; }; }\n    if (customContainerSerializer === void 0) { customContainerSerializer = function (serializedContainer) { return serializedContainer; }; }\n    // check for valid sortableContainer\n    if (!(sortableContainer instanceof HTMLElement) || !sortableContainer.isSortable === true) {\n        throw new Error('You need to provide a sortableContainer to be serialized.');\n    }\n    // check for valid serializers\n    if (typeof customItemSerializer !== 'function' || typeof customContainerSerializer !== 'function') {\n        throw new Error('You need to provide a valid serializer for items and the container.');\n    }\n    // get options\n    var options = addData(sortableContainer, 'opts');\n    var item = options.items;\n    // serialize container\n    var items = _filter(sortableContainer.children, item);\n    var serializedItems = items.map(function (item) {\n        return {\n            parent: sortableContainer,\n            node: item,\n            html: item.outerHTML,\n            index: _index(item, items)\n        };\n    });\n    // serialize container\n    var container = {\n        node: sortableContainer,\n        itemCount: serializedItems.length\n    };\n    return {\n        container: customContainerSerializer(container),\n        items: serializedItems.map(function (item) { return customItemSerializer(item, sortableContainer); })\n    };\n});\n\n/* eslint-env browser */\n/**\n * create a placeholder element\n * @param {HTMLElement} sortableElement a single sortable\n * @param {string|undefined} placeholder a string representing an html element\n * @param {string} placeholderClasses a string representing the classes that should be added to the placeholder\n */\nvar _makePlaceholder = (function (sortableElement, placeholder, placeholderClass) {\n    var _a;\n    if (placeholderClass === void 0) { placeholderClass = 'sortable-placeholder'; }\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('You must provide a valid element as a sortable.');\n    }\n    // if placeholder is not an element\n    if (!(placeholder instanceof HTMLElement) && placeholder !== undefined) {\n        throw new Error('You must provide a valid element as a placeholder or set ot to undefined.');\n    }\n    // if no placeholder element is given\n    if (placeholder === undefined) {\n        if (['UL', 'OL'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('li');\n        }\n        else if (['TABLE', 'TBODY'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('tr');\n            // set colspan to always all rows, otherwise the item can only be dropped in first column\n            placeholder.innerHTML = '<td colspan=\"100\"></td>';\n        }\n        else {\n            placeholder = document.createElement('div');\n        }\n    }\n    // add classes to placeholder\n    if (typeof placeholderClass === 'string') {\n        (_a = placeholder.classList).add.apply(_a, placeholderClass.split(' '));\n    }\n    return placeholder;\n});\n\n/* eslint-env browser */\n/**\n * Get height of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementHeight = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // get only height if element has box-sizing: border-box specified\n    if (style.getPropertyValue('box-sizing') === 'border-box') {\n        return parseInt(style.getPropertyValue('height'), 10);\n    }\n    // pick applicable properties, convert to int and reduce by adding\n    return ['height', 'padding-top', 'padding-bottom']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * Get width of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementWidth = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['width', 'padding-left', 'padding-right']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * get handle or return item\n * @param {Array<HTMLElement>} items\n * @param {string} selector\n */\nvar _getHandles = (function (items, selector) {\n    if (!(items instanceof Array)) {\n        throw new Error('You must provide a Array of HTMLElements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return items;\n    }\n    return items\n        // remove items without handle from array\n        .filter(function (item) {\n        return item.querySelector(selector) instanceof HTMLElement ||\n            (item.shadowRoot && item.shadowRoot.querySelector(selector) instanceof HTMLElement);\n    })\n        // replace item with handle in array\n        .map(function (item) {\n        return item.querySelector(selector) || (item.shadowRoot && item.shadowRoot.querySelector(selector));\n    });\n});\n\n/**\n * @param {Event} event\n * @returns {HTMLElement}\n */\nvar getEventTarget = (function (event) {\n    return (event.composedPath && event.composedPath()[0]) || event.target;\n});\n\n/* eslint-env browser */\n/**\n * defaultDragImage returns the current item as dragged image\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {object} elementOffset - an object with the offsets top, left, right & bottom\n * @param {Event} event - the original drag event object\n * @return {object} with element, posX and posY properties\n */\nvar defaultDragImage = function (draggedElement, elementOffset, event) {\n    return {\n        element: draggedElement,\n        posX: event.pageX - elementOffset.left,\n        posY: event.pageY - elementOffset.top\n    };\n};\n/**\n * attaches an element as the drag image to an event\n * @param {Event} event - the original drag event object\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {Function} customDragImage - function to create a custom dragImage\n * @return void\n */\nvar setDragImage = (function (event, draggedElement, customDragImage) {\n    // check if event is provided\n    if (!(event instanceof Event)) {\n        throw new Error('setDragImage requires a DragEvent as the first argument.');\n    }\n    // check if draggedElement is provided\n    if (!(draggedElement instanceof HTMLElement)) {\n        throw new Error('setDragImage requires the dragged element as the second argument.');\n    }\n    // set default function of none provided\n    if (!customDragImage) {\n        customDragImage = defaultDragImage;\n    }\n    // check if setDragImage method is available\n    if (event.dataTransfer && event.dataTransfer.setDragImage) {\n        // get the elements offset\n        var elementOffset = _offset(draggedElement);\n        // get the dragImage\n        var dragImage = customDragImage(draggedElement, elementOffset, event);\n        // check if custom function returns correct values\n        if (!(dragImage.element instanceof HTMLElement) || typeof dragImage.posX !== 'number' || typeof dragImage.posY !== 'number') {\n            throw new Error('The customDragImage function you provided must return and object with the properties element[string], posX[integer], posY[integer].');\n        }\n        // needs to be set for HTML5 drag & drop to work\n        event.dataTransfer.effectAllowed = 'copyMove';\n        // Firefox requires it to use the event target's id for the data\n        event.dataTransfer.setData('text/plain', getEventTarget(event).id);\n        // set the drag image on the event\n        event.dataTransfer.setDragImage(dragImage.element, dragImage.posX, dragImage.posY);\n    }\n});\n\n/**\n * Check if curList accepts items from destList\n * @param {sortable} destination the container an item is move to\n * @param {sortable} origin the container an item comes from\n */\nvar _listsConnected = (function (destination, origin) {\n    // check if valid sortable\n    if (destination.isSortable === true) {\n        var acceptFrom = store(destination).getConfig('acceptFrom');\n        // check if acceptFrom is valid\n        if (acceptFrom !== null && acceptFrom !== false && typeof acceptFrom !== 'string') {\n            throw new Error('HTML5Sortable: Wrong argument, \"acceptFrom\" must be \"null\", \"false\", or a valid selector string.');\n        }\n        if (acceptFrom !== null) {\n            return acceptFrom !== false && acceptFrom.split(',').filter(function (sel) {\n                return sel.length > 0 && origin.matches(sel);\n            }).length > 0;\n        }\n        // drop in same list\n        if (destination === origin) {\n            return true;\n        }\n        // check if lists are connected with connectWith\n        if (store(destination).getConfig('connectWith') !== undefined && store(destination).getConfig('connectWith') !== null) {\n            return store(destination).getConfig('connectWith') === store(origin).getConfig('connectWith');\n        }\n    }\n    return false;\n});\n\n/**\n * default configurations\n */\nvar defaultConfiguration = {\n    items: null,\n    // deprecated\n    connectWith: null,\n    // deprecated\n    disableIEFix: null,\n    acceptFrom: null,\n    copy: false,\n    placeholder: null,\n    placeholderClass: 'sortable-placeholder',\n    draggingClass: 'sortable-dragging',\n    hoverClass: false,\n    dropTargetContainerClass: false,\n    debounce: 0,\n    throttleTime: 100,\n    maxItems: 0,\n    itemSerializer: undefined,\n    containerSerializer: undefined,\n    customDragImage: null,\n    orientation: 'vertical'\n};\n\n/**\n * make sure a function is only called once within the given amount of time\n * @param {Function} fn the function to throttle\n * @param {number} threshold time limit for throttling\n */\n// must use function to keep this context\nfunction _throttle (fn, threshold) {\n    var _this = this;\n    if (threshold === void 0) { threshold = 250; }\n    // check function\n    if (typeof fn !== 'function') {\n        throw new Error('You must provide a function as the first argument for throttle.');\n    }\n    // check threshold\n    if (typeof threshold !== 'number') {\n        throw new Error('You must provide a number as the second argument for throttle.');\n    }\n    var lastEventTimestamp = null;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var now = Date.now();\n        if (lastEventTimestamp === null || now - lastEventTimestamp >= threshold) {\n            lastEventTimestamp = now;\n            fn.apply(_this, args);\n        }\n    };\n}\n\n/* eslint-env browser */\n/**\n * enable or disable hoverClass on mouseenter/leave if container Items\n * @param {sortable} sortableContainer a valid sortableContainer\n * @param {boolean} enable enable or disable event\n */\n// export default (sortableContainer: sortable, enable: boolean) => {\nvar enableHoverClass = (function (sortableContainer, enable) {\n    if (typeof store(sortableContainer).getConfig('hoverClass') === 'string') {\n        var hoverClasses_1 = store(sortableContainer).getConfig('hoverClass').split(' ');\n        // add class on hover\n        if (enable === true) {\n            addEventListener(sortableContainer, 'mousemove', _throttle(function (event) {\n                // check of no mouse button was pressed when mousemove started == no drag\n                if (event.buttons === 0) {\n                    _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                        var _a, _b;\n                        if (item !== event.target) {\n                            (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                        }\n                        else {\n                            (_b = item.classList).add.apply(_b, hoverClasses_1);\n                        }\n                    });\n                }\n            }, store(sortableContainer).getConfig('throttleTime')));\n            // remove class on leave\n            addEventListener(sortableContainer, 'mouseleave', function () {\n                _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                    var _a;\n                    (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                });\n            });\n            // remove events\n        }\n        else {\n            removeEventListener(sortableContainer, 'mousemove');\n            removeEventListener(sortableContainer, 'mouseleave');\n        }\n    }\n});\n\n/* eslint-env browser */\n/*\n * variables global to the plugin\n */\nvar dragging;\nvar draggingHeight;\nvar draggingWidth;\n/*\n * Keeps track of the initialy selected list, where 'dragstart' event was triggered\n * It allows us to move the data in between individual Sortable List instances\n */\n// Origin List - data from before any item was changed\nvar originContainer;\nvar originIndex;\nvar originElementIndex;\nvar originItemsBeforeUpdate;\n// Previous Sortable Container - we dispatch as sortenter event when a\n// dragged item enters a sortableContainer for the first time\nvar previousContainer;\n// Destination List - data from before any item was changed\nvar destinationItemsBeforeUpdate;\n/**\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n    removeEventListener(items, 'dragstart');\n    removeEventListener(items, 'dragend');\n    removeEventListener(items, 'dragover');\n    removeEventListener(items, 'dragenter');\n    removeEventListener(items, 'drop');\n    removeEventListener(items, 'mouseenter');\n    removeEventListener(items, 'mouseleave');\n};\n// Remove container events\nvar _removeContainerEvents = function (originContainer, previousContainer) {\n    if (originContainer) {\n        removeEventListener(originContainer, 'dragleave');\n    }\n    if (previousContainer && (previousContainer !== originContainer)) {\n        removeEventListener(previousContainer, 'dragleave');\n    }\n};\n/**\n * _getDragging returns the current element to drag or\n * a copy of the element.\n * Is Copy Active for sortable\n * @param {HTMLElement} draggedItem - the item that the user drags\n * @param {HTMLElement} sortable a single sortable\n */\nvar _getDragging = function (draggedItem, sortable) {\n    var ditem = draggedItem;\n    if (store(sortable).getConfig('copy') === true) {\n        ditem = draggedItem.cloneNode(true);\n        addAttribute(ditem, 'aria-copied', 'true');\n        draggedItem.parentElement.appendChild(ditem);\n        ditem.style.display = 'none';\n        ditem.oldDisplay = draggedItem.style.display;\n    }\n    return ditem;\n};\n/**\n * Remove data from sortable\n * @param {HTMLElement} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n    removeData(sortable);\n    removeAttribute(sortable, 'aria-dropeffect');\n};\n/**\n * Remove data from items\n * @param {Array<HTMLElement>|HTMLElement} items\n */\nvar _removeItemData = function (items) {\n    removeAttribute(items, 'aria-grabbed');\n    removeAttribute(items, 'aria-copied');\n    removeAttribute(items, 'draggable');\n    removeAttribute(items, 'role');\n};\n/**\n * find sortable from element. travels up parent element until found or null.\n * @param {HTMLElement} element a single sortable\n * @param {Event} event - the current event. We need to pass it to be able to\n * find Sortable whith shadowRoot (document fragment has no parent)\n */\nfunction findSortable(element, event) {\n    if (event.composedPath) {\n        return event.composedPath().find(function (el) { return el.isSortable; });\n    }\n    while (element.isSortable !== true) {\n        element = element.parentElement;\n    }\n    return element;\n}\n/**\n * Dragging event is on the sortable element. finds the top child that\n * contains the element.\n * @param {HTMLElement} sortableElement a single sortable\n * @param {HTMLElement} element is that being dragged\n */\nfunction findDragElement(sortableElement, element) {\n    var options = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, options.items);\n    var itemlist = items.filter(function (ele) {\n        return ele.contains(element) || (ele.shadowRoot && ele.shadowRoot.contains(element));\n    });\n    return itemlist.length > 0 ? itemlist[0] : element;\n}\n/**\n * Destroy the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts') || {};\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    // remove event handlers & data from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'dragstart');\n    removeEventListener(sortableElement, 'dragend');\n    removeEventListener(sortableElement, 'drop');\n    // remove event data from sortable\n    _removeSortableData(sortableElement);\n    // remove event handlers & data from items\n    removeEventListener(handles, 'mousedown');\n    _removeItemEvents(items);\n    _removeItemData(items);\n    _removeContainerEvents(originContainer, previousContainer);\n    // clear sortable flag\n    sortableElement.isSortable = false;\n};\n/**\n * Enable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'move');\n    addData(sortableElement, '_disabled', 'false');\n    addAttribute(handles, 'draggable', 'true');\n    // @todo: remove this fix\n    // IE FIX for ghost\n    // can be disabled as it has the side effect that other events\n    // (e.g. click) will be ignored\n    if (opts.disableIEFix === false) {\n        var spanEl = (document || window.document).createElement('span');\n        if (typeof spanEl.dragDrop === 'function') {\n            addEventListener(handles, 'mousedown', function () {\n                if (items.indexOf(this) !== -1) {\n                    this.dragDrop();\n                }\n                else {\n                    var parent = this.parentElement;\n                    while (items.indexOf(parent) === -1) {\n                        parent = parent.parentElement;\n                    }\n                    parent.dragDrop();\n                }\n            });\n        }\n    }\n};\n/**\n * Disable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'none');\n    addData(sortableElement, '_disabled', 'true');\n    addAttribute(handles, 'draggable', 'false');\n    removeEventListener(handles, 'mousedown');\n};\n/**\n * Reload the sortable\n * @param {HTMLElement} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addData(sortableElement, '_disabled', 'false');\n    // remove event handlers from items\n    _removeItemEvents(items);\n    _removeContainerEvents(originContainer, previousContainer);\n    removeEventListener(handles, 'mousedown');\n    // remove event handlers from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'drop');\n};\n/**\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nfunction sortable(sortableElements, options) {\n    // get method string to see if a method is called\n    var method = String(options);\n    options = options || {};\n    // check if the user provided a selector instead of an element\n    if (typeof sortableElements === 'string') {\n        sortableElements = document.querySelectorAll(sortableElements);\n    }\n    // if the user provided an element, return it in an array to keep the return value consistant\n    if (sortableElements instanceof HTMLElement) {\n        sortableElements = [sortableElements];\n    }\n    sortableElements = Array.prototype.slice.call(sortableElements);\n    if (/serialize/.test(method)) {\n        return sortableElements.map(function (sortableContainer) {\n            var opts = addData(sortableContainer, 'opts');\n            return _serialize(sortableContainer, opts.itemSerializer, opts.containerSerializer);\n        });\n    }\n    sortableElements.forEach(function (sortableElement) {\n        if (/enable|disable|destroy/.test(method)) {\n            return sortable[method](sortableElement);\n        }\n        // log deprecation\n        ['connectWith', 'disableIEFix'].forEach(function (configKey) {\n            if (Object.prototype.hasOwnProperty.call(options, configKey) && options[configKey] !== null) {\n                console.warn(\"HTML5Sortable: You are using the deprecated configuration \\\"\" + configKey + \"\\\". This will be removed in an upcoming version, make sure to migrate to the new options when updating.\");\n            }\n        });\n        // merge options with default options\n        options = Object.assign({}, defaultConfiguration, store(sortableElement).config, options);\n        // init data store for sortable\n        store(sortableElement).config = options;\n        // set options on sortable\n        addData(sortableElement, 'opts', options);\n        // property to define as sortable\n        sortableElement.isSortable = true;\n        // reset sortable\n        _reloadSortable(sortableElement);\n        // initialize\n        var listItems = _filter(sortableElement.children, options.items);\n        // create element if user defined a placeholder element as a string\n        var customPlaceholder;\n        if (options.placeholder !== null && options.placeholder !== undefined) {\n            var tempContainer = document.createElement(sortableElement.tagName);\n            if (options.placeholder instanceof HTMLElement) {\n                tempContainer.appendChild(options.placeholder);\n            }\n            else {\n                tempContainer.innerHTML = options.placeholder;\n            }\n            customPlaceholder = tempContainer.children[0];\n        }\n        // add placeholder\n        store(sortableElement).placeholder = _makePlaceholder(sortableElement, customPlaceholder, options.placeholderClass);\n        addData(sortableElement, 'items', options.items);\n        if (options.acceptFrom) {\n            addData(sortableElement, 'acceptFrom', options.acceptFrom);\n        }\n        else if (options.connectWith) {\n            addData(sortableElement, 'connectWith', options.connectWith);\n        }\n        _enableSortable(sortableElement);\n        addAttribute(listItems, 'role', 'option');\n        addAttribute(listItems, 'aria-grabbed', 'false');\n        // enable hover class\n        enableHoverClass(sortableElement, true);\n        /*\n         Handle drag events on draggable items\n         Handle is set at the sortableElement level as it will bubble up\n         from the item\n         */\n        addEventListener(sortableElement, 'dragstart', function (e) {\n            // ignore dragstart events\n            var target = getEventTarget(e);\n            if (target.isSortable === true) {\n                return;\n            }\n            e.stopImmediatePropagation();\n            if ((options.handle && !target.matches(options.handle)) || target.getAttribute('draggable') === 'false') {\n                return;\n            }\n            var sortableContainer = findSortable(target, e);\n            var dragItem = findDragElement(sortableContainer, target);\n            // grab values\n            originItemsBeforeUpdate = _filter(sortableContainer.children, options.items);\n            originIndex = originItemsBeforeUpdate.indexOf(dragItem);\n            originElementIndex = _index(dragItem, sortableContainer.children);\n            originContainer = sortableContainer;\n            // add transparent clone or other ghost to cursor\n            setDragImage(e, dragItem, options.customDragImage);\n            // cache selsection & add attr for dragging\n            draggingHeight = _getElementHeight(dragItem);\n            draggingWidth = _getElementWidth(dragItem);\n            dragItem.classList.add(options.draggingClass);\n            dragging = _getDragging(dragItem, sortableContainer);\n            addAttribute(dragging, 'aria-grabbed', 'true');\n            // dispatch sortstart event on each element in group\n            sortableContainer.dispatchEvent(new CustomEvent('sortstart', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging,\n                    originalTarget: target\n                }\n            }));\n        });\n        /*\n         We are capturing targetSortable before modifications with 'dragenter' event\n        */\n        addEventListener(sortableElement, 'dragenter', function (e) {\n            var target = getEventTarget(e);\n            var sortableContainer = findSortable(target, e);\n            if (sortableContainer && sortableContainer !== previousContainer) {\n                destinationItemsBeforeUpdate = _filter(sortableContainer.children, addData(sortableContainer, 'items'))\n                    .filter(function (item) { return item !== store(sortableElement).placeholder; });\n                if (options.dropTargetContainerClass) {\n                    sortableContainer.classList.add(options.dropTargetContainerClass);\n                }\n                sortableContainer.dispatchEvent(new CustomEvent('sortenter', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer\n                        },\n                        destination: {\n                            container: sortableContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate\n                        },\n                        item: dragging,\n                        originalTarget: target\n                    }\n                }));\n                addEventListener(sortableContainer, 'dragleave', function (e) {\n                    // TODO: rename outTarget to be more self-explanatory\n                    // e.fromElement for very old browsers, similar to relatedTarget\n                    var outTarget = e.relatedTarget || e.fromElement;\n                    if (!e.currentTarget.contains(outTarget)) {\n                        if (options.dropTargetContainerClass) {\n                            sortableContainer.classList.remove(options.dropTargetContainerClass);\n                        }\n                        sortableContainer.dispatchEvent(new CustomEvent('sortleave', {\n                            detail: {\n                                origin: {\n                                    elementIndex: originElementIndex,\n                                    index: originIndex,\n                                    container: sortableContainer\n                                },\n                                item: dragging,\n                                originalTarget: target\n                            }\n                        }));\n                    }\n                });\n            }\n            previousContainer = sortableContainer;\n        });\n        /*\n         * Dragend Event - https://developer.mozilla.org/en-US/docs/Web/Events/dragend\n         * Fires each time dragEvent end, or ESC pressed\n         * We are using it to clean up any draggable elements and placeholders\n         */\n        addEventListener(sortableElement, 'dragend', function (e) {\n            if (!dragging) {\n                return;\n            }\n            dragging.classList.remove(options.draggingClass);\n            addAttribute(dragging, 'aria-grabbed', 'false');\n            if (dragging.getAttribute('aria-copied') === 'true' && addData(dragging, 'dropped') !== 'true') {\n                dragging.remove();\n            }\n            dragging.style.display = dragging.oldDisplay;\n            delete dragging.oldDisplay;\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) { return data.placeholder; })\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                .filter(isInDom)[0];\n            if (visiblePlaceholder) {\n                visiblePlaceholder.remove();\n            }\n            // dispatch sortstart event on each element in group\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            previousContainer = null;\n            dragging = null;\n            draggingHeight = null;\n            draggingWidth = null;\n        });\n        /*\n         * Drop Event - https://developer.mozilla.org/en-US/docs/Web/Events/drop\n         * Fires when valid drop target area is hit\n         */\n        addEventListener(sortableElement, 'drop', function (e) {\n            if (!_listsConnected(sortableElement, dragging.parentElement)) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            addData(dragging, 'dropped', 'true');\n            // get the one placeholder that is currently visible\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) {\n                return data.placeholder;\n            })\n                // filter only HTMLElements\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                // filter only elements in DOM\n                .filter(isInDom)[0];\n            // attach element after placeholder\n            insertAfter(visiblePlaceholder, dragging);\n            // remove placeholder from dom\n            visiblePlaceholder.remove();\n            /*\n             * Fires Custom Event - 'sortstop'\n             */\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            var placeholder = store(sortableElement).placeholder;\n            var originItems = _filter(originContainer.children, options.items)\n                .filter(function (item) { return item !== placeholder; });\n            var destinationContainer = this.isSortable === true ? this : this.parentElement;\n            var destinationItems = _filter(destinationContainer.children, addData(destinationContainer, 'items'))\n                .filter(function (item) { return item !== placeholder; });\n            var destinationElementIndex = _index(dragging, Array.from(dragging.parentElement.children)\n                .filter(function (item) { return item !== placeholder; }));\n            var destinationIndex = _index(dragging, destinationItems);\n            if (options.dropTargetContainerClass) {\n                destinationContainer.classList.remove(options.dropTargetContainerClass);\n            }\n            /*\n             * When a list item changed container lists or index within a list\n             * Fires Custom Event - 'sortupdate'\n             */\n            if (originElementIndex !== destinationElementIndex || originContainer !== destinationContainer) {\n                sortableElement.dispatchEvent(new CustomEvent('sortupdate', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer,\n                            itemsBeforeUpdate: originItemsBeforeUpdate,\n                            items: originItems\n                        },\n                        destination: {\n                            index: destinationIndex,\n                            elementIndex: destinationElementIndex,\n                            container: destinationContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate,\n                            items: destinationItems\n                        },\n                        item: dragging\n                    }\n                }));\n            }\n        });\n        var debouncedDragOverEnter = _debounce(function (sortableElement, element, pageX, pageY) {\n            if (!dragging) {\n                return;\n            }\n            // set placeholder height if forcePlaceholderSize option is set\n            if (options.forcePlaceholderSize) {\n                store(sortableElement).placeholder.style.height = draggingHeight + 'px';\n                store(sortableElement).placeholder.style.width = draggingWidth + 'px';\n            }\n            // if element the draggedItem is dragged onto is within the array of all elements in list\n            // (not only items, but also disabled, etc.)\n            if (Array.from(sortableElement.children).indexOf(element) > -1) {\n                var thisHeight = _getElementHeight(element);\n                var thisWidth = _getElementWidth(element);\n                var placeholderIndex = _index(store(sortableElement).placeholder, element.parentElement.children);\n                var thisIndex = _index(element, element.parentElement.children);\n                // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n                if (thisHeight > draggingHeight || thisWidth > draggingWidth) {\n                    // Dead zone?\n                    var deadZoneVertical = thisHeight - draggingHeight;\n                    var deadZoneHorizontal = thisWidth - draggingWidth;\n                    var offsetTop = _offset(element).top;\n                    var offsetLeft = _offset(element).left;\n                    if (placeholderIndex < thisIndex &&\n                        ((options.orientation === 'vertical' && pageY < offsetTop) ||\n                            (options.orientation === 'horizontal' && pageX < offsetLeft))) {\n                        return;\n                    }\n                    if (placeholderIndex > thisIndex &&\n                        ((options.orientation === 'vertical' && pageY > offsetTop + thisHeight - deadZoneVertical) ||\n                            (options.orientation === 'horizontal' && pageX > offsetLeft + thisWidth - deadZoneHorizontal))) {\n                        return;\n                    }\n                }\n                if (dragging.oldDisplay === undefined) {\n                    dragging.oldDisplay = dragging.style.display;\n                }\n                if (dragging.style.display !== 'none') {\n                    dragging.style.display = 'none';\n                }\n                // To avoid flicker, determine where to position the placeholder\n                // based on where the mouse pointer is relative to the elements\n                // vertical center.\n                var placeAfter = false;\n                try {\n                    var elementMiddleVertical = _offset(element).top + element.offsetHeight / 2;\n                    var elementMiddleHorizontal = _offset(element).left + element.offsetWidth / 2;\n                    placeAfter = (options.orientation === 'vertical' && (pageY >= elementMiddleVertical)) ||\n                        (options.orientation === 'horizontal' && (pageX >= elementMiddleHorizontal));\n                }\n                catch (e) {\n                    placeAfter = placeholderIndex < thisIndex;\n                }\n                if (placeAfter) {\n                    insertAfter(element, store(sortableElement).placeholder);\n                }\n                else {\n                    insertBefore(element, store(sortableElement).placeholder);\n                }\n                // get placeholders from all stores & remove all but current one\n                Array.from(stores.values())\n                    // remove empty values\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    // foreach placeholder in array if outside of current sorableContainer -> remove from DOM\n                    .forEach(function (data) {\n                    if (data.placeholder !== store(sortableElement).placeholder) {\n                        data.placeholder.remove();\n                    }\n                });\n            }\n            else {\n                // get all placeholders from store\n                var placeholders = Array.from(stores.values())\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    .map(function (data) {\n                    return data.placeholder;\n                });\n                // check if element is not in placeholders\n                if (placeholders.indexOf(element) === -1 && sortableElement === element && !_filter(element.children, options.items).length) {\n                    placeholders.forEach(function (element) { return element.remove(); });\n                    element.appendChild(store(sortableElement).placeholder);\n                }\n            }\n        }, options.debounce);\n        // Handle dragover and dragenter events on draggable items\n        var onDragOverEnter = function (e) {\n            var element = e.target;\n            var sortableElement = element.isSortable === true ? element : findSortable(element, e);\n            element = findDragElement(sortableElement, element);\n            if (!dragging || !_listsConnected(sortableElement, dragging.parentElement) || addData(sortableElement, '_disabled') === 'true') {\n                return;\n            }\n            var options = addData(sortableElement, 'opts');\n            if (parseInt(options.maxItems) && _filter(sortableElement.children, addData(sortableElement, 'items')).length >= parseInt(options.maxItems) && dragging.parentElement !== sortableElement) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            e.dataTransfer.dropEffect = store(sortableElement).getConfig('copy') === true ? 'copy' : 'move';\n            debouncedDragOverEnter(sortableElement, element, e.pageX, e.pageY);\n        };\n        addEventListener(listItems.concat(sortableElement), 'dragover', onDragOverEnter);\n        addEventListener(listItems.concat(sortableElement), 'dragenter', onDragOverEnter);\n    });\n    return sortableElements;\n}\nsortable.destroy = function (sortableElement) {\n    _destroySortable(sortableElement);\n};\nsortable.enable = function (sortableElement) {\n    _enableSortable(sortableElement);\n};\nsortable.disable = function (sortableElement) {\n    _disableSortable(sortableElement);\n};\n/* START.TESTS_ONLY */\nsortable.__testing = {\n    // add internal methods here for testing purposes\n    _data: addData,\n    _removeItemEvents: _removeItemEvents,\n    _removeItemData: _removeItemData,\n    _removeSortableData: _removeSortableData,\n    _removeContainerEvents: _removeContainerEvents\n};\n\nexport default sortable;\n","import app from 'flarum/app';\nimport Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\n\nconst translationPrefix = 'fof-taxonomies.admin.edit-taxonomy.';\n\n/* global m */\n\nexport default class AbstractEditModal extends Modal {\n    className() {\n        return 'Modal--small TaxonomyEditModal';\n    }\n\n    /**\n     * @abstract\n     */\n    translationPrefix() {\n        return '';\n    }\n\n    /**\n     * @abstract\n     */\n    isNew() {\n        return true;\n    }\n\n    title() {\n        return app.translator.trans(this.translationPrefix() + 'title.' + (this.isNew() ? 'new' : 'edit'));\n    }\n\n    init() {\n        super.init();\n\n        this.dirty = false;\n    }\n\n    /**\n     * @abstract\n     */\n    form() {\n        return [];\n    }\n\n    content() {\n        return m('.Modal-body', [\n            this.form(),\n            m('.FormGroup', [\n                Button.component({\n                    type: 'submit',\n                    className: 'Button Button--primary',\n                    loading: this.loading,\n                    disabled: !this.dirty,\n                }, app.translator.trans(this.translationPrefix() + 'submit.' + (this.isNew() ? 'new' : 'edit'))),\n                ' ',\n                this.isNew() ? null : Button.component({\n                    className: 'Button Button--link TaxonomyEditModal-delete',\n                    children: app.translator.trans(translationPrefix + 'delete'),\n                    loading: this.loading,\n                    onclick: this.ondelete.bind(this),\n                }),\n            ]),\n        ]);\n    }\n\n    /**\n     * @abstract\n     */\n    ondelete() {\n        //\n    }\n}\n","import app from 'flarum/app';\nimport extractText from 'flarum/utils/extractText';\nimport {slug} from 'flarum/utils/string';\nimport AbstractEditModal from './AbstractEditModal';\n\n/* global m */\n\nexport default class EditTermModal extends AbstractEditModal {\n    init() {\n        super.init();\n\n        const {term} = this.props;\n\n        this.name = term ? term.name() : '';\n        this.slug = term ? term.slug() : '';\n        this.description = term ? term.description() : '';\n        this.color = term ? term.color() : '';\n        this.icon = term ? term.icon() : '';\n        this.dirty = false;\n    }\n\n    translationPrefix() {\n        return 'fof-taxonomies.admin.edit-term.';\n    }\n\n    isNew() {\n        return !this.props.term;\n    }\n\n    form() {\n        return [\n            m('.Form-group', [\n                m('label', app.translator.trans(this.translationPrefix() + 'field.name')),\n                m('input.FormControl', {\n                    type: 'text',\n                    value: this.name,\n                    oninput: event => {\n                        this.name = event.target.value;\n                        this.slug = slug(event.target.value);\n                        this.dirty = true;\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans(this.translationPrefix() + 'field.slug')),\n                m('input.FormControl', {\n                    type: 'text',\n                    value: this.slug,\n                    oninput: event => {\n                        this.slug = event.target.value;\n                        this.dirty = true;\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans(this.translationPrefix() + 'field.description')),\n                m('textarea.FormControl', {\n                    value: this.description,\n                    oninput: event => {\n                        this.description = event.target.value;\n                        this.dirty = true;\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans(this.translationPrefix() + 'field.color')),\n                m('input.FormControl', {\n                    type: 'text',\n                    value: this.color,\n                    oninput: event => {\n                        this.color = event.target.value;\n                        this.dirty = true;\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans(this.translationPrefix() + 'field.icon')),\n                m('.helpText', app.translator.trans(this.translationPrefix() + 'field.iconDescription', {\n                    a: m('a', {\n                        href: 'https://fontawesome.com/icons?m=free',\n                        tabindex: -1,\n                    }),\n                })),\n                m('input.FormControl', {\n                    type: 'text',\n                    value: this.icon,\n                    oninput: event => {\n                        this.icon = event.target.value;\n                        this.dirty = true;\n                    },\n                }),\n            ]),\n        ];\n    }\n\n    ondelete() {\n        if (!confirm(extractText(app.translator.trans(this.translationPrefix() + 'deleteConfirmation', {\n            name: this.props.term.name(),\n        })))) {\n            return;\n        }\n\n        this.loading = true;\n\n        this.props.term.delete({\n            errorHandler: this.onerror.bind(this),\n        }).then(() => {\n            app.modal.close();\n\n            if (this.props.ondelete) {\n                this.props.ondelete();\n            }\n        }, () => {\n            this.loaded();\n        });\n    }\n\n    onsubmit() {\n        this.loading = true;\n\n        const record = this.props.term || app.store.createRecord('fof-taxonomy-terms');\n\n        const options = {\n            errorHandler: this.onerror.bind(this),\n        };\n\n        if (this.isNew()) {\n            options.url = app.forum.attribute('apiUrl') + this.props.taxonomy.apiEndpoint() + '/terms';\n        }\n\n        record.save({\n            name: this.name,\n            slug: this.slug,\n            description: this.description,\n            color: this.color,\n            icon: this.icon,\n        }, options).then(() => {\n            app.modal.close();\n\n            if (this.props.onsave) {\n                this.props.onsave(record);\n            }\n        }, () => {\n            this.loaded();\n        });\n    }\n}\n","import sortable from 'html5sortable/dist/html5sortable.es.js';\n\nimport app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport sortTerms from '../../common/utils/sortTerms';\nimport EditTermModal from './EditTermModal';\nimport taxonomyIcon from '../../common/helpers/taxonomyIcon';\n\n/* global m */\n\nexport default class TaxonomyTermsList extends Component {\n    init() {\n        this.terms = null;\n\n        app.request({\n            method: 'GET',\n            url: app.forum.attribute('apiUrl') + this.props.taxonomy.apiEndpoint() + '/terms',\n        }).then(result => {\n            this.terms = app.store.pushPayload(result);\n            m.redraw();\n        });\n    }\n\n    view() {\n        return m('.TaxonomyTermEdit', [\n            this.terms === null ? LoadingIndicator.component({}) : m('ol.TaxonomyTermList', {\n                config: element => {\n                    sortable(element)[0].addEventListener('sortupdate', event => {\n                        const order = this.$('.js-sort-term-item')\n                            .map(function () {\n                                return $(this).data('id');\n                            })\n                            .get();\n\n                        app.request({\n                            method: 'POST',\n                            url: app.forum.attribute('apiUrl') + this.props.taxonomy.apiEndpoint() + '/terms/order',\n                            data: {\n                                order,\n                            },\n                        }).then(result => {\n                            // If there's no error, we save the new order so it can be used in case a redraw is triggered\n                            app.store.pushPayload(result);\n                        }).catch(e => {\n                            // If there's an error, we force a full redraw to make sure the user sees what is saved\n                            m.redraw.strategy('all');\n                            m.redraw();\n                            throw e;\n                        });\n                    });\n                },\n            }, this.terms.map((term, index) => m('li.TaxonomyTermListItem.js-sort-term-item', {\n                'data-id': term.id(),\n                style: {\n                    color: term.color(),\n                },\n            }, [\n                taxonomyIcon(term),\n                m('span.TaxonomyTermListItem-name', term.name()),\n                Button.component({\n                    className: 'Button Button--link',\n                    icon: 'fas fa-pencil-alt',\n                    onclick: () => {\n                        app.modal.show(new EditTermModal({\n                            term,\n                            ondelete: () => {\n                                this.terms.splice(index, 1);\n                            },\n                        }));\n                    },\n                }),\n            ]))),\n            Button.component({\n                className: 'Button',\n                onclick: () => {\n                    app.modal.show(new EditTermModal({\n                        taxonomy: this.props.taxonomy,\n                        onsave: term => {\n                            this.terms = sortTerms([...this.terms, term]);\n                        },\n                    }));\n                },\n            }, app.translator.trans('fof-taxonomies.admin.page.create.term')),\n            ' ',\n            Button.component({\n                className: 'Button',\n                onclick: () => {\n                    app.request({\n                        method: 'POST',\n                        url: app.forum.attribute('apiUrl') + this.props.taxonomy.apiEndpoint() + '/terms/order',\n                        data: {\n                            order: [],\n                        },\n                    }).then(result => {\n                        app.store.pushPayload(result);\n                    }).catch(e => {\n                        m.redraw.strategy('all');\n                        m.redraw();\n                        throw e;\n                    });\n                },\n            }, app.translator.trans('fof-taxonomies.admin.page.reset-term-order')),\n        ]);\n    }\n}\n","import app from 'flarum/app';\nimport extractText from 'flarum/utils/extractText';\nimport {slug} from 'flarum/utils/string';\nimport Select from 'flarum/components/Select';\nimport AbstractEditModal from './AbstractEditModal';\n\n/* global m */\n\nexport default class EditTaxonomyModal extends AbstractEditModal {\n    init() {\n        super.init();\n\n        const {taxonomy} = this.props;\n\n        this.type = taxonomy ? taxonomy.type() : 'discussions';\n        this.name = taxonomy ? taxonomy.name() : '';\n        this.slug = taxonomy ? taxonomy.slug() : '';\n        this.description = taxonomy ? taxonomy.description() : '';\n        this.color = taxonomy ? taxonomy.color() : '';\n        this.icon = taxonomy ? taxonomy.icon() : '';\n        this.showLabel = taxonomy ? taxonomy.showLabel() : false;\n        this.showFilter = taxonomy ? taxonomy.showFilter() : false;\n        this.allowCustomValues = taxonomy ? taxonomy.allowCustomValues() : false;\n        this.customValueValidation = (taxonomy ? taxonomy.customValueValidation() : null) || '';\n        this.customValueSlugger = (taxonomy ? taxonomy.customValueSlugger() : null) || 'random';\n        this.minTerms = taxonomy ? taxonomy.minTerms() : '';\n        this.maxTerms = taxonomy ? taxonomy.maxTerms() : '';\n    }\n\n    translationPrefix() {\n        return 'fof-taxonomies.admin.edit-taxonomy.';\n    }\n\n    isNew() {\n        return !this.props.taxonomy;\n    }\n\n    form() {\n        return [\n            m('.Form-group', [\n                m('label', app.translator.trans(this.translationPrefix() + 'field.type')),\n                m('.helpText', app.translator.trans(this.translationPrefix() + 'field.typeDescription')),\n                Select.component({\n                    options: {\n                        discussions: app.translator.trans(this.translationPrefix() + 'type-options.discussions'),\n                        users: app.translator.trans(this.translationPrefix() + 'type-options.users'),\n                    },\n                    value: this.type,\n                    onchange: value => {\n                        this.type = value;\n                        this.dirty = true;\n                    },\n                    disabled: !this.isNew(),\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans(this.translationPrefix() + 'field.name')),\n                m('input.FormControl', {\n                    type: 'text',\n                    value: this.name,\n                    oninput: event => {\n                        this.name = event.target.value;\n                        this.slug = slug(event.target.value);\n                        this.dirty = true;\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans(this.translationPrefix() + 'field.slug')),\n                m('input.FormControl', {\n                    type: 'text',\n                    value: this.slug,\n                    oninput: event => {\n                        this.slug = event.target.value;\n                        this.dirty = true;\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans(this.translationPrefix() + 'field.description')),\n                m('textarea.FormControl', {\n                    value: this.description,\n                    oninput: event => {\n                        this.description = event.target.value;\n                        this.dirty = true;\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans(this.translationPrefix() + 'field.color')),\n                m('input.FormControl', {\n                    type: 'text',\n                    value: this.color,\n                    oninput: event => {\n                        this.color = event.target.value;\n                        this.dirty = true;\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans(this.translationPrefix() + 'field.icon')),\n                m('.helpText', app.translator.trans(this.translationPrefix() + 'field.iconDescription', {\n                    a: m('a', {\n                        href: 'https://fontawesome.com/icons?m=free',\n                        tabindex: -1,\n                    }),\n                })),\n                m('input.FormControl', {\n                    type: 'text',\n                    value: this.icon,\n                    oninput: event => {\n                        this.icon = event.target.value;\n                        this.dirty = true;\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', [\n                    m('input', {\n                        type: 'checkbox',\n                        checked: this.showLabel,\n                        onchange: () => {\n                            this.showLabel = !this.showLabel;\n                            this.dirty = true;\n                        },\n                    }),\n                    ' ',\n                    app.translator.trans(this.translationPrefix() + 'field.showLabel'),\n                ]),\n            ]),\n            m('.Form-group', [\n                m('label', [\n                    m('input', {\n                        type: 'checkbox',\n                        checked: this.showFilter,\n                        onchange: () => {\n                            this.showFilter = !this.showFilter;\n                            this.dirty = true;\n                        },\n                    }),\n                    ' ',\n                    app.translator.trans(this.translationPrefix() + 'field.showFilter'),\n                ]),\n            ]),\n            m('.Form-group', [\n                m('label', [\n                    m('input', {\n                        type: 'checkbox',\n                        checked: this.allowCustomValues,\n                        onchange: () => {\n                            this.allowCustomValues = !this.allowCustomValues;\n                            this.dirty = true;\n                        },\n                    }),\n                    ' ',\n                    app.translator.trans(this.translationPrefix() + 'field.allowCustomValues'),\n                ]),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans(this.translationPrefix() + 'field.customValueValidation')),\n                Select.component({\n                    options: {\n                        '': app.translator.trans(this.translationPrefix() + 'validation-options.default'),\n                        alpha_num: app.translator.trans(this.translationPrefix() + 'validation-options.alpha_num'),\n                        alpha_dash: app.translator.trans(this.translationPrefix() + 'validation-options.alpha_dash'),\n                        regex: app.translator.trans(this.translationPrefix() + 'validation-options.regex'),\n                    },\n                    value: this.customValueValidation.indexOf('/') === 0 ? 'regex' : this.customValueValidation,\n                    onchange: value => {\n                        this.customValueValidation = value === 'regex' ? '//' : value;\n                        this.dirty = true;\n                    },\n                    disabled: !this.allowCustomValues,\n                }),\n                this.customValueValidation.indexOf('/') === 0 ? m('.TaxonomyRegexInput', [\n                    m('span', '/'),\n                    m('input.FormControl', {\n                        type: 'text',\n                        value: this.customValueValidation.split('/')[1],\n                        oninput: event => {\n                            this.customValueValidation = '/' + event.target.value + '/' + this.customValueValidation.split('/')[2];\n                            this.dirty = true;\n                        },\n                        disabled: !this.allowCustomValues,\n                    }),\n                    m('span', '/'),\n                    m('input.FormControl', {\n                        type: 'text',\n                        value: this.customValueValidation.split('/')[2],\n                        oninput: event => {\n                            this.customValueValidation = '/' + this.customValueValidation.split('/')[1] + '/' + event.target.value;\n                            this.dirty = true;\n                        },\n                        disabled: !this.allowCustomValues,\n                    }),\n                ]) : null,\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans(this.translationPrefix() + 'field.customValueSlugger')),\n                m('.helpText', app.translator.trans(this.translationPrefix() + 'field.customValueSluggerDescription')),\n                Select.component({\n                    options: {\n                        random: app.translator.trans(this.translationPrefix() + 'slugger-options.random'),\n                        alpha_dash: app.translator.trans(this.translationPrefix() + 'slugger-options.alpha_dash'),\n                        transliterator: app.translator.trans(this.translationPrefix() + 'slugger-options.transliterator'),\n                    },\n                    value: this.customValueSlugger,\n                    onchange: value => {\n                        this.customValueSlugger = value;\n                        this.dirty = true;\n                    },\n                    disabled: !this.allowCustomValues,\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans(this.translationPrefix() + 'field.countRequired')),\n                m('.helpText', app.translator.trans(this.translationPrefix() + 'field.countRequiredDescription')),\n                m('.TaxonomyModal-rangeInput', [\n                    m('input.FormControl', {\n                        type: 'number',\n                        min: 0,\n                        step: 1,\n                        value: this.minTerms,\n                        oninput: event => {\n                            this.minTerms = parseInt(event.target.value) || '';\n                            this.dirty = true;\n                        },\n                    }),\n                    ' ',\n                    app.translator.trans(this.translationPrefix() + 'field.rangeSeparatorText'),\n                    ' ',\n                    m('input.FormControl', {\n                        type: 'number',\n                        min: 0,\n                        step: 1,\n                        value: this.maxTerms,\n                        oninput: event => {\n                            this.maxTerms = parseInt(event.target.value) || '';\n                            this.dirty = true;\n                        },\n                    }),\n                ]),\n            ]),\n        ];\n    }\n\n    ondelete() {\n        if (!confirm(extractText(app.translator.trans(this.translationPrefix() + 'deleteConfirmation', {\n            name: this.props.taxonomy.name(),\n        })))) {\n            return;\n        }\n\n        this.loading = true;\n\n        this.props.taxonomy.delete({\n            errorHandler: this.onerror.bind(this),\n        }).then(() => {\n            app.modal.close();\n\n            if (this.props.ondelete) {\n                this.props.ondelete();\n            }\n        }, () => {\n            this.loaded();\n        });\n    }\n\n    onsubmit() {\n        this.loading = true;\n\n        const record = this.props.taxonomy || app.store.createRecord('fof-taxonomies');\n\n        record.save({\n            type: this.type,\n            name: this.name,\n            slug: this.slug,\n            description: this.description,\n            color: this.color,\n            icon: this.icon,\n            show_label: this.showLabel,\n            show_filter: this.showFilter,\n            allow_custom_values: this.allowCustomValues,\n            custom_value_validation: this.customValueValidation,\n            custom_value_slugger: this.customValueSlugger,\n            min_terms: this.minTerms,\n            max_terms: this.maxTerms,\n        }, {\n            errorHandler: this.onerror.bind(this),\n        }).then(() => {\n            app.modal.close();\n\n            if (this.props.onsave) {\n                this.props.onsave(record);\n            }\n        }, () => {\n            this.loaded();\n        });\n    }\n}\n","import sortable from 'html5sortable/dist/html5sortable.es.js';\n\nimport app from 'flarum/app';\nimport Page from 'flarum/components/Page';\nimport Button from 'flarum/components/Button';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport sortTaxonomies from '../../common/utils/sortTaxonomies';\nimport TaxonomyTermsList from './TaxonomyTermsList';\nimport EditTaxonomyModal from './EditTaxonomyModal';\nimport taxonomyIcon from '../../common/helpers/taxonomyIcon';\n\n/* global m */\n\nexport default class TaxonomiesPage extends Page {\n    init() {\n        super.init();\n\n        this.tabIndex = 0;\n        this.taxonomies = null;\n\n        app.request({\n            method: 'GET',\n            url: app.forum.attribute('apiUrl') + '/fof-taxonomies',\n        }).then(result => {\n            this.taxonomies = app.store.pushPayload(result);\n            m.redraw();\n        });\n    }\n\n    view() {\n        return m('.TaxonomiesPage', m('.container', [\n            this.taxonomies === null ? LoadingIndicator.component({}) : [\n                m('h2', app.translator.trans('fof-taxonomies.admin.page.title')),\n                m('.TaxonomyTabs', {\n                    config: element => {\n                        sortable(element, {\n                            selector: '.js-sort-taxonomy-item',\n                        })[0].addEventListener('sortupdate', event => {\n                            const order = this.$('.js-sort-taxonomy-item')\n                                .map(function () {\n                                    return $(this).data('id');\n                                })\n                                .get();\n\n                            app.request({\n                                method: 'POST',\n                                url: app.forum.attribute('apiUrl') + '/fof-taxonomies/order',\n                                data: {\n                                    order,\n                                },\n                            }).then(result => {\n                                this.taxonomies = app.store.pushPayload(result);\n                                this.tabIndex = 0;\n                            }).catch(e => {\n                                m.redraw.strategy('all');\n                                m.redraw();\n                                throw e;\n                            });\n                        });\n                    },\n                }, [\n                    this.taxonomies.map((taxonomy, index) => m('.TaxonomyTab.js-sort-taxonomy-item', {\n                        'data-id': taxonomy.id(),\n                        key: taxonomy.id(),\n                        onclick: () => {\n                            this.tabIndex = index;\n                        },\n                        className: this.tabIndex === index ? 'active' : '',\n                        style: {\n                            color: taxonomy.color(),\n                        },\n                    }, [\n                        taxonomyIcon(taxonomy),\n                        ' ',\n                        taxonomy.name(),\n                        ' ',\n                        Button.component({\n                            className: 'Button Button--link',\n                            icon: 'fas fa-pencil-alt',\n                            onclick: () => {\n                                app.modal.show(new EditTaxonomyModal({\n                                    taxonomy,\n                                    ondelete: () => {\n                                        this.taxonomies.splice(index, 1);\n                                        this.tabIndex = 0;\n                                    },\n                                }));\n                            },\n                        }),\n                    ])),\n                    Button.component({\n                        key: 'new',\n                        className: 'TaxonomyTab',\n                        icon: 'fas fa-plus',\n                        onclick: () => {\n                            app.modal.show(new EditTaxonomyModal({\n                                onsave: taxonomy => {\n                                    this.taxonomies = sortTaxonomies([...this.taxonomies, taxonomy]);\n                                    this.tabIndex = this.taxonomies.findIndex(t => t === taxonomy);\n                                },\n                            }));\n                        },\n                    }, app.translator.trans('fof-taxonomies.admin.page.create.taxonomy')),\n                ]),\n                this.tabIndex < this.taxonomies.length ? m('div', m('div', {\n                    key: this.taxonomies[this.tabIndex].id(),\n                }, TaxonomyTermsList.component({\n                    taxonomy: this.taxonomies[this.tabIndex],\n                }))) : null,\n            ],\n        ]));\n    }\n}\n","import AbstractEditModal from './AbstractEditModal';\nimport EditTaxonomyModal from './EditTaxonomyModal';\nimport EditTermModal from './EditTermModal';\nimport TaxonomiesPage from './TaxonomiesPage';\nimport TaxonomyTermsList from './TaxonomyTermsList';\n\nexport const components = {\n    AbstractEditModal,\n    EditTaxonomyModal,\n    EditTermModal,\n    TaxonomiesPage,\n    TaxonomyTermsList,\n};\n","import app from 'flarum/app';\nimport addPage from './addPage';\nimport addPermissions from './addPermissions';\nimport addModels from '../common/addModels';\n\nexport * from './components';\nexport * from '../common/helpers';\nexport * from '../common/models';\nexport * from '../common/utils';\n\napp.initializers.add('fof-taxonomies', () => {\n    addPage();\n    addPermissions();\n    addModels();\n});\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport AdminLinkButton from 'flarum/components/AdminLinkButton';\nimport AdminNav from 'flarum/components/AdminNav';\nimport TaxonomiesPage from './components/TaxonomiesPage';\n\n/* global m */\n\nexport default function () {\n    app.routes['fof-taxonomies'] = {\n        path: '/taxonomies',\n        component: TaxonomiesPage.component(),\n    };\n\n    app.extensionSettings['fof-taxonomies'] = () => m.route(app.route('fof-taxonomies'));\n\n    extend(AdminNav.prototype, 'items', items => {\n        items.add('fof-taxonomies', AdminLinkButton.component({\n            href: app.route('fof-taxonomies'),\n            icon: 'fas fa-tags',\n            description: app.translator.trans('fof-taxonomies.admin.menu.description'),\n        }, app.translator.trans('fof-taxonomies.admin.menu.title')));\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport PermissionGrid from 'flarum/components/PermissionGrid';\nimport ItemList from 'flarum/utils/ItemList';\n\nconst translationPrefix = 'fof-taxonomies.admin.permissions.';\n\nexport default function () {\n    extend(PermissionGrid.prototype, 'permissionItems', permissionGroups => {\n        const items = new ItemList();\n\n        items.add('seeOwnDiscussion', {\n            icon: 'fas fa-eye',\n            label: app.translator.trans(translationPrefix + 'seeOwnDiscussion'),\n            permission: 'discussion.seeOwnTaxonomy',\n        });\n\n        items.add('seeAnyDiscussion', {\n            icon: 'fas fa-eye',\n            label: app.translator.trans(translationPrefix + 'seeAnyDiscussion'),\n            permission: 'discussion.seeAnyTaxonomy',\n            allowGuest: true,\n        });\n\n        items.add('editOwnDiscussion', {\n            icon: 'fas fa-tag',\n            label: app.translator.trans(translationPrefix + 'editOwnDiscussion'),\n            permission: 'discussion.editOwnTaxonomy',\n        });\n\n        items.add('editAnyDiscussion', {\n            icon: 'fas fa-tag',\n            label: app.translator.trans(translationPrefix + 'editAnyDiscussion'),\n            permission: 'discussion.editAnyTaxonomy',\n        });\n\n        items.add('seeOwnUser', {\n            icon: 'fas fa-eye',\n            label: app.translator.trans(translationPrefix + 'seeOwnUser'),\n            permission: 'user.seeOwnTaxonomy',\n        });\n\n        items.add('seeAnyUser', {\n            icon: 'fas fa-eye',\n            label: app.translator.trans(translationPrefix + 'seeAnyUser'),\n            permission: 'user.seeAnyTaxonomy',\n            allowGuest: true,\n        });\n\n        items.add('editOwnUser', {\n            icon: 'fas fa-tag',\n            label: app.translator.trans(translationPrefix + 'editOwnUser'),\n            permission: 'user.editOwnTaxonomy',\n        });\n\n        items.add('editAnyUser', {\n            icon: 'fas fa-tag',\n            label: app.translator.trans(translationPrefix + 'editAnyUser'),\n            permission: 'user.editAnyTaxonomy',\n        });\n\n        permissionGroups.add('taxonomies', {\n            label: app.translator.trans(translationPrefix + 'heading'),\n            children: items.toArray()\n        });\n    });\n}\n"],"sourceRoot":""}